module private KoKo.XMLPreprocessor

let private xmlCharacters = """&nbsp;	&#160;
&iexcl;	&#161;
&cent;	&#162;
&pound;	&#163;
&curren;	&#164;
&yen;	&#165;
&brvbar;	&#166;
&sect;	&#167;
&uml;	&#168;
&copy;	&#169;
&ordf;	&#170;
&laquo;	&#171;
&not;	&#172;
&shy;	&#173;
&reg;	&#174;
&macr;	&#175;
&deg;	&#176;
&plusmn;	&#177;
&sup2;	&#178;
&sup3;	&#179;
&acute;	&#180;
&micro;	&#181;
&para;	&#182;
&middot;	&#183;
&cedil;	&#184;
&sup1;	&#185;
&ordm;	&#186;
&raquo;	&#187;
&frac14;	&#188;
&frac12;	&#189;
&frac34;	&#190;
&iquest;	&#191;
&Agrave;	&#192;
&Aacute;	&#193;
&Acirc;	&#194;
&Atilde;	&#195;
&Auml;	&#196;
&aring;	&#197;
&Aring;	&#197;
&AElig;	&#198;
&Ccedil;	&#199;
&Egrave;	&#200;
&Eacute;	&#201;
&Ecirc;	&#202;
&Euml;	&#203;
&Igrave;	&#204;
&Iacute;	&#205;
&Icirc;	&#206;
&Iuml;	&#207;
&ETH;	&#208;
&Ntilde;	&#209;
&Ograve;	&#210;
&Oacute;	&#211;
&Ocirc;	&#212;
&Otilde;	&#213;
&Ouml;	&#214;
&times;	&#215;
&Oslash;	&#216;
&Ugrave;	&#217;
&Uacute;	&#218;
&Ucirc;	&#219;
&Uuml;	&#220;
&Yacute;	&#221;
&THORN;	&#222;
&szlig;	&#223;
&agrave;	&#224;
&aacute;	&#225;
&acirc;	&#226;
&atilde;	&#227;
&auml;	&#228;
&aring;	&#229;
&aelig;	&#230;
&ccedil;	&#231;
&egrave;	&#232;
&eacute;	&#233;
&ecirc;	&#234;
&euml;	&#235;
&igrave;	&#236;
&iacute;	&#237;
&icirc;	&#238;
&iuml;	&#239;
&eth;	&#240;
&ntilde;	&#241;
&ograve;	&#242;
&oacute;	&#243;
&ocirc;	&#244;
&otilde;	&#245;
&ouml;	&#246;
&divide;	&#247;
&oslash;	&#248;
&ugrave;	&#249;
&uacute;	&#250;
&ucirc;	&#251;
&uuml;	&#252;
&yacute;	&#253;
&thorn;	&#254;
&yuml;	&#255;
&lsquo;	‘
&rsquo;	‘
&ldquo;	”
&rdquo;	”
&mdash;	—
&cent;	￠
&pound;	￡
&curren;	¤
&yen;	￥
&brvbar;	|
&sect;	§
&uml;	¨
&ordf;	a
&shy;	-
&macr;	ˉ
&deg;	°
&plusmn;	±
&micro;	μ
&middot;	·
&sup1;	1
&ordm;	o
&times;	×
&divide;	÷
&hellip;	…
&oline;	￣
&larr;	←
&uarr;	↑
&rarr;	→
&darr;	↓
&prod;	∏
&sum;	∑
&radic;	√
&prop;	∝
&infin;	∞
&ang;	∠
&and;	∧
&or;	∨
&cap;	∩
&cup;	∪	
&int;	∫	
&there4;	∴	
&sim;	～	
&asymp;	≈	
&ne;	≠	
&equiv;	≡	
&le;	≤	
&ge;	≥	
&oplus;	?	
&perp;	⊥	
&ndash;	–	
&mdash;	—	
&permil;	‰	
&euro;	?	
&Agrave;	à	
&Aacute;	á	
&Egrave;	è	
&Eacute;	é	
&Ecirc;	ê	
&Igrave;	ì	
&Iacute;	í	
&ETH;	D	
&Ograve;	ò	
&Oacute;	ó	
&Ugrave;	ù	
&Uacute;	ú	
&Uuml;	ü	
&Yacute;	Y	
&THORN;	T	
&agrave;	à	
&aacute;	á	
&acirc;	a	
&egrave;	è	
&eacute;	é	
&ecirc;	ê	
&igrave;	ì	
&iacute;	í	
&eth;	e	
&ograve;	ò	
&oacute;	ó	
&ugrave;	ù	
&uacute;	ú	
&uuml;	ü	
&yacute;	y	
&thorn;	t	
&Alpha;	Α	
&Beta;	Β	
&Gamma;	Γ	
&Delta;	Δ	
&Epsilon;	Ε	
&Zeta;	Ζ	
&Eta;	Η	
&Theta;	Θ	
&Iota;	Ι	
&Kappa;	Κ	
&Lambda;	Λ	
&Mu;	Μ	
&Nu;	Ν	
&Xi;	Ξ	
&Omicron;	Ο	
&Pi;	Π	
&Rho;	Ρ	
&Sigma;	Σ	
&Tau;	Τ	
&Upsilon;	Υ	
&Phi;	Φ	
&Chi;	Χ	
&Psi;	Ψ	
&Omega;	Ω	
&alpha;	α	
&beta;	β	
&gamma;	γ	
&delta;	δ	
&epsilon;	ε	
&zeta;	ζ	
&eta;	η	
&theta;	θ	
&iota;	ι	
&kappa;	κ	
&lambda;	λ	
&mu;	μ	
&nu;	ν	
&xi;	ξ	
&omicron;	ο	
&pi;	π	
&rho;	ρ	
&sigma;	σ	
&tau;	τ	
&upsilon;	υ	
&phi;	φ	
&chi;	χ	
&psi;	ψ	
&omega;	ω	
&acute;	?	
&copy;	?	
&micro;	?	
&reg;	?	
&deg;	°	
&iexcl;	?	
&raquo;	?	
&brvbar;	?	
&divide;	÷	
&iquest;	?	
&not;	?	
&sect;	§	
&bull;	?	
&frac12;	?	
&laquo;	?	
&para;	?	
&uml;	¨	
&cedil;	?	
&frac14;	?	
&plusmn;	±	
&times;	×	
&cent;	?	
&frac34;	?	
&macr;	?	
&trade;	?	
&euro;	?	
&pound;	?	
&yen;	?	
&bdquo;	?	
&hellip;	…	
&middot;	·	
&rsaquo;	?	
&ordf;	?	
&circ;	?	
&ordm;	?	
&dagger;	?	
&lsaquo;	?	
&sbquo;	?	
&permil;	‰	
&shy;	?	
&tilde;	?	
&asymp;	≈	
&frasl;	?	
&larr;	←	
&part;	?	
&spades;	?	
&cap;	∩	
&ge;	≥	
&le;	≤	
&sum;	∑	
&clubs;	?	
&hArr;	?	
&loz;	?	
&prime;	′	
&uarr;	↑	
&darr;	↓	
&hearts;	?	
&minus;	?	
&prod;	∏	
&zwj;	?	
&diams;	?	
&infin;	∞	
&ne;	≠	
&radic;	√	
&zwnj;	?	
&equiv;	≡	
&int;	∫	
&oline;	?	
&rarr;	→	
&alpha;	α	
&eta;	η	
&mu;	μ	
&pi;	π	
&theta;	θ	
&beta;	β	
&gamma;	γ	
&nu;	ν	
&psi;	ψ	
&upsilon;	υ	
&chi;	χ	
&iota;	ι	
&omega;	ω	
&rho;	ρ	
&xi;	ξ	
&delta;	δ	
&kappa;	κ	
&omicron;	ο	
&sigma;	σ	
&zeta;	ζ	
&epsilon;	ε	
&lambda;	λ	
&phi;	φ	
&tau;	τ	
&Alpha;	Α	
&Eta;	Η	
&Mu;	Μ	
&Pi;	Π	
&Theta;	Θ	
&Beta;	Β	
&Gamma;	Γ	
&Nu;	Ν	
&Psi;	Ψ	
&Upsilon;	Υ	
&Chi;	Χ	
&Iota;	Ι	
&Omega;	Ω	
&Rho;	Ρ	
&Xi;	Ξ	
&Delta;	Δ	
&Kappa;	Κ	
&Omicron;	Ο	
&Sigma;	Σ	
&Zeta;	Ζ	
&Epsilon;	Ε	
&Lambda;	Λ	
&Phi;	Φ	
&Tau;	Τ
&rsquo; ?"""


let private xmlPairCharacters =
    xmlCharacters.Replace('\t', ' ').Trim().Split '\n'
    |> Array.map (fun x -> 
        let x = x.Trim().Split ' '
        x.[0].ToLower(), Array.last x)

let PreprocessXML (xml: string) =
    xmlPairCharacters
    |> Array.fold (fun (str: string) (a, b) -> str.Replace(a, b)) xml